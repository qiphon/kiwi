{"mappings":"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","sources":["src/extract/getLangData.ts","src/utils.ts","src/const.ts","src/index.ts","src/init.ts","src/sync.ts","src/export.ts","src/import.ts","src/unused.ts","src/mock.ts","src/translate.ts","src/extract/extract.ts","src/extract/file.ts","src/extract/findChineseText.ts","src/extract/replace.ts"],"sourcesContent":["/**\n * @author doubledream\n * @desc 获取语言文件\n */\n\nimport * as globby from 'globby';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { getProjectConfig, flatten } from '../utils';\n\nconst CONFIG = getProjectConfig();\nconst LANG_DIR = path.resolve(CONFIG.kiwiDir, CONFIG.srcLang);\nconst I18N_GLOB = `${LANG_DIR}/**/*.ts`;\n\n/**\n * 获取对应文件的语言\n */\nfunction getLangData(fileName) {\n  if (fs.existsSync(fileName)) {\n    return getLangJson(fileName);\n  } else {\n    return {};\n  }\n}\n\n/**\n * 获取文件 Json\n */\nfunction getLangJson(fileName) {\n  const fileContent = fs.readFileSync(fileName, { encoding: 'utf8' });\n  let obj = fileContent.match(/export\\s*default\\s*({[\\s\\S]+);?$/)[1];\n  obj = obj.replace(/\\s*;\\s*$/, '');\n  let jsObj = {};\n  try {\n    jsObj = eval('(' + obj + ')');\n  } catch (err) {\n    console.log(obj);\n    console.error(err);\n  }\n  return jsObj;\n}\n\nfunction getI18N() {\n  const paths = globby.sync(I18N_GLOB);\n  const langObj = paths.reduce((prev, curr) => {\n    const filename = curr\n      .split('/')\n      .pop()\n      .replace(/\\.tsx?$/, '');\n    if (filename.replace(/\\.tsx?/, '') === 'index') {\n      return prev;\n    }\n\n    const fileContent = getLangData(curr);\n    let jsObj = fileContent;\n\n    if (Object.keys(jsObj).length === 0) {\n      console.log(`\\`${curr}\\` 解析失败，该文件包含的文案无法自动补全`);\n    }\n\n    return {\n      ...prev,\n      [filename]: jsObj\n    };\n  }, {});\n  return langObj;\n}\n\n/**\n * 获取全部语言, 展平\n */\nfunction getSuggestLangObj() {\n  const langObj = getI18N();\n  const finalLangObj = flatten(langObj);\n  return finalLangObj;\n}\n\nexport { getSuggestLangObj, getLangData };\n","/**\n * @author linhuiw\n * @desc 工具方法\n */\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport * as inquirer from 'inquirer';\nimport * as fs from 'fs';\nimport { pinyin } from 'pinyin-pro';\nimport { PROJECT_CONFIG, KIWI_CONFIG_FILE } from './const';\nconst colors = require('colors');\n\nfunction lookForFiles(dir: string, fileName: string): string {\n  const files = fs.readdirSync(dir);\n\n  for (let file of files) {\n    const currName = path.join(dir, file);\n    const info = fs.statSync(currName);\n    if (info.isDirectory()) {\n      if (file === '.git' || file === 'node_modules') {\n        continue;\n      }\n      const result = lookForFiles(currName, fileName);\n      if (result) {\n        return result;\n      }\n    } else if (info.isFile() && file === fileName) {\n      return currName;\n    }\n  }\n}\n\n/**\n * 获得项目配置信息\n */\nfunction getProjectConfig() {\n  const configFile = path.resolve(process.cwd(), `./${KIWI_CONFIG_FILE}`);\n  let obj = PROJECT_CONFIG.defaultConfig;\n\n  if (configFile && fs.existsSync(configFile)) {\n    obj = {\n      ...obj,\n      ...JSON.parse(fs.readFileSync(configFile, 'utf8'))\n    };\n  }\n  return obj;\n}\n\n/**\n * 获取语言资源的根目录\n */\nfunction getKiwiDir() {\n  const config = getProjectConfig();\n\n  if (config) {\n    return config.kiwiDir;\n  }\n}\n\n/**\n * 获取对应语言的目录位置\n * @param lang\n */\nfunction getLangDir(lang) {\n  const langsDir = getKiwiDir();\n  return path.resolve(langsDir, lang);\n}\n\n/**\n * 深度优先遍历对象中的所有 string 属性，即文案\n */\nfunction traverse(obj, cb) {\n  function traverseInner(obj, cb, path) {\n    _.forEach(obj, (val, key) => {\n      if (typeof val === 'string') {\n        cb(val, [...path, key].join('.'));\n      } else if (typeof val === 'object' && val !== null) {\n        traverseInner(val, cb, [...path, key]);\n      }\n    });\n  }\n\n  traverseInner(obj, cb, []);\n}\n\n/**\n * 获取所有文案\n */\nfunction getAllMessages(lang: string, filter = (message: string, key: string) => true) {\n  const srcLangDir = getLangDir(lang);\n  let files = fs.readdirSync(srcLangDir);\n  files = files.filter(file => file.endsWith('.ts') && file !== 'index.ts').map(file => path.resolve(srcLangDir, file));\n\n  const allMessages = files.map(file => {\n    const { default: messages } = require(file);\n    const fileNameWithoutExt = path.basename(file).split('.')[0];\n    const flattenedMessages = {};\n\n    traverse(messages, (message, path) => {\n      const key = fileNameWithoutExt + '.' + path;\n      if (filter(message, key)) {\n        flattenedMessages[key] = message;\n      }\n    });\n\n    return flattenedMessages;\n  });\n\n  return Object.assign({}, ...allMessages);\n}\n\n/**\n * 重试方法\n * @param asyncOperation\n * @param times\n */\nfunction retry(asyncOperation, times = 1) {\n  let runTimes = 1;\n  const handleReject = e => {\n    if (runTimes++ < times) {\n      return asyncOperation().catch(handleReject);\n    } else {\n      throw e;\n    }\n  };\n  return asyncOperation().catch(handleReject);\n}\n\n/**\n * 设置超时\n * @param promise\n * @param ms\n */\nfunction withTimeout(promise, ms) {\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(`Promise timed out after ${ms} ms.`);\n    }, ms);\n  });\n  return Promise.race([promise, timeoutPromise]);\n}\n\n/**\n * 使用google翻译\n */\nfunction translateText(text, toLang) {\n  const CONFIG = getProjectConfig();\n  const options = CONFIG.translateOptions;\n  const { translate: googleTranslate } = require('google-translate')(CONFIG.googleApiKey, options);\n  return withTimeout(\n    new Promise((resolve, reject) => {\n      googleTranslate(text, 'zh', PROJECT_CONFIG.langMap[toLang], (err, translation) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(translation.translatedText);\n        }\n      });\n    }),\n    5000\n  );\n}\n\n/**\n * 翻译中文\n */\nfunction translateKeyText(text: string, origin: string) {\n  const CONFIG = getProjectConfig();\n  const { appId, appKey } = CONFIG.baiduApiKey;\n  const baiduTranslate = require('baidu-translate');\n\n  function _translateText() {\n    return withTimeout(\n      new Promise((resolve, reject) => {\n        // Baidu\n        if (origin === 'Baidu') {\n          baiduTranslate(appId, appKey, 'en', 'zh')(text)\n            .then(data => {\n              if (data && data.trans_result) {\n                const result = data.trans_result.map(item => item.dst) || [];\n                resolve(result);\n              }\n            })\n            .catch(err => {\n              reject(err);\n            });\n        }\n        // Pinyin\n        if (origin === 'Pinyin') {\n          const result = pinyin(text, { toneType: 'none' });\n          resolve(result.split('$'));\n        }\n      }),\n      3000\n    );\n  }\n\n  return retry(_translateText, 3);\n}\n\nfunction findMatchKey(langObj, text) {\n  for (const key in langObj) {\n    if (langObj[key] === text) {\n      return key;\n    }\n  }\n\n  return null;\n}\n\nfunction findMatchValue(langObj, key) {\n  return langObj[key];\n}\n\n/**\n * 将对象拍平\n * @param obj 原始对象\n * @param prefix\n */\nfunction flatten(obj, prefix = '') {\n  var propName = prefix ? prefix + '.' : '',\n    ret = {};\n\n  for (var attribute in obj) {\n    var attr = attribute.replace(/-/g, '_');\n    if (_.isArray(obj[attr])) {\n      var len = obj[attr].length;\n      ret[attr] = obj[attr].join(',');\n    } else if (typeof obj[attr] === 'object') {\n      _.extend(ret, flatten(obj[attr], propName + attr));\n    } else {\n      ret[propName + attr] = obj[attr];\n    }\n  }\n  return ret;\n}\n\n/**\n * 获取翻译源类型\n */\nasync function getTranslateOriginType() {\n  const { googleApiKey, baiduApiKey } = getProjectConfig();\n  let translateType = ['Google', 'Baidu'];\n  if (!googleApiKey) {\n    translateType = translateType.filter(item => item !== 'Google');\n  }\n  if (!baiduApiKey || !baiduApiKey.appId || !baiduApiKey.appKey) {\n    translateType = translateType.filter(item => item !== 'Baidu');\n  }\n  if (translateType.length === 0) {\n    console.log('请配置 googleApiKey 或 baiduApiKey ');\n    return {\n      pass: false,\n      origin: ''\n    };\n  }\n  if (translateType.length == 1) {\n    return {\n      pass: true,\n      origin: translateType[0]\n    };\n  }\n  const { origin } = await inquirer.prompt({\n    type: 'list',\n    name: 'origin',\n    message: '请选择使用的翻译源',\n    default: 'Google',\n    choices: ['Google', 'Baidu']\n  });\n  return {\n    pass: true,\n    origin: origin\n  };\n}\n\n/**\n * 成功的提示\n */\nfunction successInfo(message: string) {\n  console.log('successInfo: ', colors.green(message));\n}\n\n/**\n * 失败的提示\n */\nfunction failInfo(message: string) {\n  console.log('failInfo: ', colors.red(message));\n}\n\n/**\n * 普通提示\n */\nfunction highlightText(message: string | number) {\n  return colors.yellow(`${message}`);\n}\n\nexport {\n  getKiwiDir,\n  getLangDir,\n  traverse,\n  retry,\n  withTimeout,\n  getAllMessages,\n  getProjectConfig,\n  translateText,\n  findMatchKey,\n  findMatchValue,\n  flatten,\n  lookForFiles,\n  getTranslateOriginType,\n  translateKeyText,\n  successInfo,\n  failInfo,\n  highlightText\n};\n","/**\n * @author linhuiw\n * @desc 项目配置文件配置信息\n */\n\nexport const KIWI_CONFIG_FILE = 'kiwi-config.json';\n\nexport const PROJECT_CONFIG = {\n  dir: './.kiwi',\n  defaultConfig: {\n    kiwiDir: './.kiwi',\n    srcLang: 'zh-CN',\n    distLangs: ['en-US', 'zh-TW'],\n    googleApiKey: '',\n    baiduApiKey: {\n      appId: '',\n      appKey: ''\n    },\n    baiduLangMap: {\n      ['en-US']: 'en',\n      ['zh-TW']: 'cht'\n    },\n    translateOptions: {\n      concurrentLimit: 10,\n      requestOptions: {}\n    },\n    defaultTranslateKeyApi: 'Pinyin', // 批量提取文案时生成key值时的默认翻译源\n    importI18N: `import I18N from 'src/utils/I18N';`,\n    ignoreDir: '',\n    ignoreFile: ''\n  },\n  langMap: {\n    ['en-US']: 'en',\n    ['en_US']: 'en'\n  },\n  zhIndexFile: `import common from './common';\n\nexport default Object.assign({}, {\n  common\n});`,\n  zhTestFile: `export default {\n    test: '测试'\n  }`\n};\n","#!/usr/bin/env node\n\nimport * as commander from 'commander';\nimport * as inquirer from 'inquirer';\nimport { isString } from 'lodash';\nimport { initProject } from './init';\nimport { sync } from './sync';\nimport { exportMessages } from './export';\nimport { importMessages } from './import';\nimport { findUnUsed } from './unused';\nimport { mockLangs } from './mock';\nimport { extractAll } from './extract/extract';\nimport { translate } from './translate';\nimport { getTranslateOriginType } from './utils';\nimport * as ora from 'ora';\n\n/**\n * 进度条加载\n * @param text\n * @param callback\n */\nfunction spining(text, callback) {\n  const spinner = ora(`${text}中...`).start();\n  if (callback) {\n    if (callback() !== false) {\n      spinner.succeed(`${text}成功`);\n    } else {\n      spinner.fail(`${text}失败`);\n    }\n  }\n}\n\ncommander\n  .version('0.2.0')\n  .option('--init', '初始化项目', { isDefault: true })\n  .option('--import [file] [lang]', '导入翻译文案')\n  .option('--export [file] [lang]', '导出未翻译的文案')\n  .option('--sync', '同步各种语言的文案')\n  .option('--mock', '使用 Google 或者 Baidu 翻译 输出mock文件')\n  .option('--translate', '使用 Google 或者 Baidu 翻译 翻译结果自动替换目标语种文案')\n  .option('--unused', '导出未使用的文案')\n  .option('--extract [dirPath]', '一键替换指定文件夹下的所有中文文案')\n  .option('--prefix [prefix]', '指定替换中文文案前缀')\n  .parse(process.argv);\n\nif (commander.init) {\n  (async () => {\n    const result = await inquirer.prompt({\n      type: 'confirm',\n      name: 'confirm',\n      default: true,\n      message: '项目中是否已存在kiwi相关目录？'\n    });\n\n    if (!result.confirm) {\n      spining('初始化项目', async () => {\n        initProject();\n      });\n    } else {\n      const value = await inquirer.prompt({\n        type: 'input',\n        name: 'dir',\n        message: '请输入相关目录：'\n      });\n      spining('初始化项目', async () => {\n        initProject(value.dir);\n      });\n    }\n  })();\n}\n\nif (commander.import) {\n  spining('导入翻译文案', () => {\n    if (commander.import === true || commander.args.length === 0) {\n      console.log('请按格式输入：--import [file] [lang]');\n      return false;\n    } else if (commander.args) {\n      importMessages(commander.import, commander.args[0]);\n    }\n  });\n}\n\nif (commander.export) {\n  spining('导出未翻译的文案', () => {\n    if (commander.export === true && commander.args.length === 0) {\n      exportMessages();\n    } else if (commander.args) {\n      exportMessages(commander.export, commander.args[0]);\n    }\n  });\n}\n\nif (commander.sync) {\n  spining('文案同步', () => {\n    sync();\n  });\n}\n\nif (commander.unused) {\n  spining('导出未使用的文案', () => {\n    findUnUsed();\n  });\n}\n\nif (commander.mock) {\n  sync(async () => {\n    const { pass, origin } = await getTranslateOriginType();\n    if (pass) {\n      const spinner = ora(`使用 ${origin} 翻译中...`).start();\n      await mockLangs(origin);\n      spinner.succeed(`使用 ${origin} 翻译成功`);\n    }\n  });\n}\n\nif (commander.translate) {\n  sync(async () => {\n    const { pass, origin } = await getTranslateOriginType();\n    if (pass) {\n      const spinner = ora(`使用 ${origin} 翻译中...`).start();\n      await translate(origin);\n      spinner.succeed(`使用 ${origin} 翻译成功`);\n    }\n  });\n}\n\nif (commander.extract) {\n  console.log(isString(commander.prefix));\n  if (commander.prefix === true) {\n    console.log('请指定翻译后文案 key 值的前缀 --prefix xxxx');\n  } else if (isString(commander.prefix) && !new RegExp(/^I18N(\\.[-_a-zA-Z1-9$]+)+$/).test(commander.prefix)) {\n    console.log('前缀必须以I18N开头,后续跟上字母、下滑线、破折号、$ 字符组成的变量名');\n  } else {\n    const extractAllParams = {\n      prefix: isString(commander.prefix) && commander.prefix,\n      dirPath: isString(commander.extract) && commander.extract\n    };\n\n    extractAll(extractAllParams);\n  }\n}\n","/**\n * @author linhuiw\n * @desc 初始化 kiwi 项目的文件以及配置\n */\n\nimport * as _ from 'lodash';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { PROJECT_CONFIG, KIWI_CONFIG_FILE } from './const';\n\nfunction creteConfigFile(existDir?: string) {\n  const configDir = path.resolve(process.cwd(), `./${KIWI_CONFIG_FILE}`);\n  if (existDir && fs.existsSync(existDir) && !fs.existsSync(configDir)) {\n    const config = JSON.stringify(\n      {\n        ...PROJECT_CONFIG.defaultConfig,\n        kiwiDir: existDir\n      },\n      null,\n      2\n    );\n    fs.writeFile(configDir, config, err => {\n      if (err) {\n        console.log(err);\n      }\n    });\n  } else if (!fs.existsSync(configDir)) {\n    const config = JSON.stringify(PROJECT_CONFIG.defaultConfig, null, 2);\n    fs.writeFile(configDir, config, err => {\n      if (err) {\n        console.log(err);\n      }\n    });\n  }\n}\n\nfunction createCnFile() {\n  const cnDir = `${PROJECT_CONFIG.dir}/zh-CN`;\n  if (!fs.existsSync(cnDir)) {\n    fs.mkdirSync(cnDir);\n    fs.writeFile(`${cnDir}/index.ts`, PROJECT_CONFIG.zhIndexFile, err => {\n      if (err) {\n        console.log(err);\n      }\n    });\n    fs.writeFile(`${cnDir}/common.ts`, PROJECT_CONFIG.zhTestFile, err => {\n      if (err) {\n        console.log(err);\n      }\n    });\n  }\n}\n\nfunction initProject(existDir?: string) {\n  /** 初始化配置文件夹 */\n  if (existDir) {\n    if (!fs.existsSync(existDir)) {\n      console.log('输入的目录不存在，已为你生成默认文件夹');\n      fs.mkdirSync(PROJECT_CONFIG.dir);\n    }\n  } else if (!fs.existsSync(PROJECT_CONFIG.dir)) {\n    fs.mkdirSync(PROJECT_CONFIG.dir);\n  }\n  creteConfigFile(existDir);\n  if (!(existDir && fs.existsSync(existDir))) {\n    createCnFile();\n  }\n}\n\nexport { initProject };\n","/**\n * @author linhuiw\n * @desc 翻译文件\n */\nrequire('ts-node').register({\n  compilerOptions: {\n    module: 'commonjs'\n  }\n});\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport { traverse, getProjectConfig, getLangDir } from './utils';\nconst CONFIG = getProjectConfig();\n\n/**\n * 获取中文文案文件的翻译，优先使用已有翻译，若找不到则使用 google 翻译\n * */\nfunction getTranslations(file, toLang) {\n  const translations = {};\n  const fileNameWithoutExt = path.basename(file).split('.')[0];\n  const srcLangDir = getLangDir(CONFIG.srcLang);\n  const distLangDir = getLangDir(toLang);\n  const srcFile = path.resolve(srcLangDir, file);\n  const distFile = path.resolve(distLangDir, file);\n  const { default: texts } = require(srcFile);\n  let distTexts;\n  if (fs.existsSync(distFile)) {\n    distTexts = require(distFile).default;\n  }\n\n  traverse(texts, (text, path) => {\n    const key = fileNameWithoutExt + '.' + path;\n    const distText = _.get(distTexts, path);\n    translations[key] = distText || text;\n  });\n\n  return translations;\n}\n\n/**\n * 将翻译写入文件\n * */\nfunction writeTranslations(file, toLang, translations) {\n  const fileNameWithoutExt = path.basename(file).split('.')[0];\n  const srcLangDir = getLangDir(CONFIG.srcLang);\n  const srcFile = path.resolve(srcLangDir, file);\n  const { default: texts } = require(srcFile);\n  const rst = {};\n\n  traverse(texts, (text, path) => {\n    const key = fileNameWithoutExt + '.' + path;\n    // 使用 setWith 而不是 set，保证 numeric key 创建的不是数组，而是对象\n    // https://github.com/lodash/lodash/issues/1316#issuecomment-120753100\n    _.setWith(rst, path, translations[key], Object);\n  });\n\n  const fileContent = 'export default ' + JSON.stringify(rst, null, 2);\n  const filePath = path.resolve(getLangDir(toLang), path.basename(file));\n  return new Promise((resolve, reject) => {\n    fs.writeFile(filePath, fileContent, err => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\n/**\n * 翻译对应的文件\n * @param file\n * @param toLang\n */\nfunction translateFile(file, toLang) {\n  const translations = getTranslations(file, toLang);\n  const toLangDir = path.resolve(__dirname, `../${toLang}`);\n  if (!fs.existsSync(toLangDir)) {\n    fs.mkdirSync(toLangDir);\n  }\n\n  writeTranslations(file, toLang, translations);\n}\n\n/**\n * 翻译所有文件\n */\nfunction sync(callback?) {\n  const srcLangDir = getLangDir(CONFIG.srcLang);\n  fs.readdir(srcLangDir, (err, files) => {\n    if (err) {\n      console.error(err);\n    } else {\n      files = files.filter(file => file.endsWith('.ts') && file !== 'index.ts' && file !== 'mock.ts').map(file => file);\n      const translateFiles = toLang =>\n        Promise.all(\n          files.map(file => {\n            translateFile(file, toLang);\n          })\n        );\n      Promise.all(CONFIG.distLangs.map(translateFiles)).then(\n        () => {\n          const langDirs = CONFIG.distLangs.map(getLangDir);\n          langDirs.map(dir => {\n            const filePath = path.resolve(dir, 'index.ts');\n            if (!fs.existsSync(dir)) {\n              fs.mkdirSync(dir);\n            }\n            fs.copyFileSync(path.resolve(srcLangDir, 'index.ts'), filePath);\n          });\n          callback && callback();\n        },\n        e => {\n          console.error(e);\n          process.exit(1);\n        }\n      );\n    }\n  });\n}\n\nexport { sync };\n","/**\n * @author linhuiw\n * @desc 导出未翻译文件\n */\nrequire('ts-node').register({\n  compilerOptions: {\n    module: 'commonjs'\n  }\n});\nimport * as fs from 'fs';\nimport { tsvFormatRows } from 'd3-dsv';\nimport { getAllMessages, getProjectConfig } from './utils';\nimport * as _ from 'lodash';\n\nfunction exportMessages(file?: string, lang?: string) {\n  const CONFIG = getProjectConfig();\n  const langs = lang ? [lang] : CONFIG.distLangs;\n\n  langs.map(lang => {\n    const allMessages = getAllMessages(CONFIG.srcLang);\n    const existingTranslations = getAllMessages(\n      lang,\n      (message, key) => !/[\\u4E00-\\u9FA5]/.test(allMessages[key]) || allMessages[key] !== message\n    );\n    const messagesToTranslate = Object.keys(allMessages)\n      .filter(key => !existingTranslations.hasOwnProperty(key))\n      .map(key => {\n        let message = allMessages[key];\n        message = JSON.stringify(message).slice(1, -1);\n        return [key, message];\n      });\n\n    if (messagesToTranslate.length === 0) {\n      console.log('All the messages have been translated.');\n      return;\n    }\n\n    const content = tsvFormatRows(messagesToTranslate);\n    const sourceFile = file || `./export-${lang}`;\n    fs.writeFileSync(sourceFile, content);\n    console.log(`Exported ${messagesToTranslate.length} message(s).`);\n  });\n}\n\nexport { exportMessages };\n","/**\n * @author linhuiw\n * @desc 导入翻译文件\n */\nrequire('ts-node').register({\n  compilerOptions: {\n    module: 'commonjs'\n  }\n});\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport { tsvParseRows } from 'd3-dsv';\nimport { getAllMessages, getProjectConfig, traverse } from './utils';\n\nconst CONFIG = getProjectConfig();\n\nfunction getMessagesToImport(file: string) {\n  const content = fs.readFileSync(file).toString();\n  const messages = tsvParseRows(content, ([key, value]) => {\n    try {\n      // value 的形式和 JSON 中的字符串值一致，其中的特殊字符是以转义形式\b存在的，\n      // 如换行符 \\n，在 value 中占两个字符，需要转成真正的换行符。\n      value = JSON.parse(`\"${value}\"`);\n    } catch (e) {\n      throw new Error(`Illegal message: ${value}`);\n    }\n    return [key, value];\n  });\n  const rst = {};\n  const duplicateKeys = new Set();\n  messages.forEach(([key, value]) => {\n    if (rst.hasOwnProperty(key)) {\n      duplicateKeys.add(key);\n    }\n    rst[key] = value;\n  });\n  if (duplicateKeys.size > 0) {\n    const errorMessage = 'Duplicate messages detected: \\n' + [...duplicateKeys].join('\\n');\n    console.error(errorMessage);\n    process.exit(1);\n  }\n  return rst;\n}\n\nfunction writeMessagesToFile(messages: any, file: string, lang: string) {\n  const kiwiDir = CONFIG.kiwiDir;\n  const srcMessages = require(path.resolve(kiwiDir, CONFIG.srcLang, file)).default;\n  const dstFile = path.resolve(kiwiDir, lang, file);\n  const oldDstMessages = require(dstFile).default;\n  const rst = {};\n  traverse(srcMessages, (message, key) => {\n    _.setWith(rst, key, _.get(messages, key) || _.get(oldDstMessages, key), Object);\n  });\n  fs.writeFileSync(dstFile + '.ts', 'export default ' + JSON.stringify(rst, null, 2));\n}\n\nfunction importMessages(file: string, lang: string) {\n  let messagesToImport = getMessagesToImport(file);\n  const allMessages = getAllMessages(CONFIG.srcLang);\n  messagesToImport = _.pickBy(messagesToImport, (message, key) => allMessages.hasOwnProperty(key));\n  const keysByFiles = _.groupBy(Object.keys(messagesToImport), key => key.split('.')[0]);\n  const messagesByFiles = _.mapValues(keysByFiles, (keys, file) => {\n    const rst = {};\n    _.forEach(keys, key => {\n      _.setWith(rst, key.substr(file.length + 1), messagesToImport[key], Object);\n    });\n    return rst;\n  });\n  _.forEach(messagesByFiles, (messages, file) => {\n    writeMessagesToFile(messages, file, lang);\n  });\n}\n\nexport { importMessages };\n","/**\n * @author linhuiw\n * @desc 查找未使用的 key\n */\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { getKiwiDir, getLangDir, traverse } from './utils';\n\nconst lookingForString = '';\n\nfunction findUnUsed() {\n  const srcLangDir = path.resolve(getKiwiDir(), 'zh-CN');\n  let files = fs.readdirSync(srcLangDir);\n  files = files.filter(file => file.endsWith('.ts') && file !== 'index.ts');\n  const unUnsedKeys = [];\n  files.map(file => {\n    const srcFile = path.resolve(srcLangDir, file);\n    const { default: messages } = require(srcFile);\n    const filename = path.basename(file, '.ts');\n\n    traverse(messages, (text, path) => {\n      const key = `I18N.${filename}.${path}`;\n      const hasKey = recursiveReadFile('./src', key);\n      if (!hasKey) {\n        unUnsedKeys.push(key);\n      }\n    });\n  });\n  console.log(unUnsedKeys, 'unUnsedKeys');\n}\n/**\n * 递归查找文件\n * @param fileName\n */\nfunction recursiveReadFile(fileName, text) {\n  let hasText = false;\n  if (!fs.existsSync(fileName)) return;\n  if (isFile(fileName) && !hasText) {\n    check(fileName, text, () => {\n      hasText = true;\n    });\n  }\n  if (isDirectory(fileName)) {\n    var files = fs.readdirSync(fileName).filter(file => {\n      return !file.startsWith('.') && !['node_modules', 'build', 'dist'].includes(file);\n    });\n    files.forEach(function(val, key) {\n      var temp = path.join(fileName, val);\n      if (isDirectory(temp) && !hasText) {\n        hasText = recursiveReadFile(temp, text);\n      }\n      if (isFile(temp) && !hasText) {\n        check(temp, text, () => {\n          hasText = true;\n        });\n      }\n    });\n  }\n  return hasText;\n}\n\n/**\n * 检查文件\n * @param fileName\n */\nfunction check(fileName, text, callback) {\n  var data = readFile(fileName);\n  var exc = new RegExp(text);\n  if (exc.test(data)) {\n    callback();\n  }\n}\n\n/**\n * 判断是文件夹\n * @param fileName\n */\nfunction isDirectory(fileName) {\n  if (fs.existsSync(fileName)) {\n    return fs.statSync(fileName).isDirectory();\n  }\n}\n\n/**\n * 判断是否是文件\n * @param fileName\n */\nfunction isFile(fileName) {\n  if (fs.existsSync(fileName)) {\n    return fs.statSync(fileName).isFile();\n  }\n}\n\n/**\n * 读取文件\n * @param fileName\n */\nfunction readFile(fileName) {\n  if (fs.existsSync(fileName)) {\n    return fs.readFileSync(fileName, 'utf-8');\n  }\n}\n\nexport { findUnUsed };\n","/**\n * @author linhuiw\n * @desc 翻译方法\n * @TODO: index 文件需要添加 mock\n */\nrequire('ts-node').register({\n  compilerOptions: {\n    module: 'commonjs'\n  }\n});\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as _ from 'lodash';\nimport { traverse, getProjectConfig, getLangDir, translateText } from './utils';\nimport { baiduTranslateTexts, googleTranslateTexts } from './translate';\n\nconst CONFIG = getProjectConfig();\n\n/**\n * 获取中文文案\n */\nfunction getSourceText() {\n  const srcLangDir = getLangDir(CONFIG.srcLang);\n  const srcFile = path.resolve(srcLangDir, 'index.ts');\n  const { default: texts } = require(srcFile);\n\n  return texts;\n}\n/**\n * 获取对应语言文案\n * @param dstLang\n */\nfunction getDistText(dstLang) {\n  const distLangDir = getLangDir(dstLang);\n  const distFile = path.resolve(distLangDir, 'index.ts');\n  let distTexts = {};\n  if (fs.existsSync(distFile)) {\n    distTexts = require(distFile).default;\n  }\n\n  return distTexts;\n}\n\n/**\n * 获取所有未翻译的文案\n * @param 目标语种\n */\nfunction getAllUntranslatedTexts(toLang) {\n  const texts = getSourceText();\n  const distTexts = getDistText(toLang);\n  const untranslatedTexts = {};\n  /** 遍历文案 */\n  traverse(texts, (text, path) => {\n    const distText = _.get(distTexts, path);\n    if (text === distText || !distText) {\n      untranslatedTexts[path] = text;\n    }\n  });\n  return untranslatedTexts;\n}\n\n/**\n * Mock 对应语言\n * @param dstLang\n */\nasync function mockCurrentLang(dstLang: string, origin: string) {\n  const untranslatedTexts = getAllUntranslatedTexts(dstLang);\n  let mocks = {};\n  if (origin === 'Google') {\n    mocks = await googleTranslateTexts(untranslatedTexts, dstLang);\n  } else {\n    mocks = await baiduTranslateTexts(untranslatedTexts, dstLang);\n  }\n\n  /** 所有任务执行完毕后，写入mock文件 */\n  return writeMockFile(dstLang, mocks);\n}\n/**\n * 写入 Mock 文件\n * @param dstLang\n * @param mocks\n */\nfunction writeMockFile(dstLang, mocks) {\n  const fileContent = 'export default ' + JSON.stringify(mocks, null, 2);\n  const filePath = path.resolve(getLangDir(dstLang), 'mock.ts');\n  return new Promise((resolve, reject) => {\n    fs.writeFile(filePath, fileContent, err => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n/**\n * Mock 语言的未翻译的文案\n * @param lang\n */\nasync function mockLangs(origin: string) {\n  const langs = CONFIG.distLangs;\n  if (origin === 'Google') {\n    const mockPromise = langs.map(lang => {\n      return mockCurrentLang(lang, origin);\n    });\n    return Promise.all(mockPromise);\n  } else {\n    for (var i = 0; i < langs.length; i++) {\n      await mockCurrentLang(langs[i], origin);\n    }\n    return Promise.resolve();\n  }\n}\n\nexport { mockLangs, getAllUntranslatedTexts };\n","/**\n * @author zongwenjian\n * @desc 全量翻译 translate命令\n */\nrequire('ts-node').register({\n  compilerOptions: {\n    module: 'commonjs'\n  }\n});\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as baiduTranslate from 'baidu-translate';\nimport { tsvFormatRows } from 'd3-dsv';\nimport { getProjectConfig, getLangDir, withTimeout, translateText } from './utils';\nimport { importMessages } from './import';\nimport { getAllUntranslatedTexts } from './mock';\n\nconst CONFIG = getProjectConfig();\n\n/**\n * 百度单次翻译任务\n * @param text 待翻译文案\n * @param toLang 目标语种\n */\nfunction translateTextByBaidu(text, toLang) {\n  const {\n    baiduApiKey: { appId, appKey },\n    baiduLangMap\n  } = CONFIG;\n  return withTimeout(\n    new Promise((resolve, reject) => {\n      baiduTranslate(appId, appKey, baiduLangMap[toLang], 'zh')(text)\n        .then(data => {\n          if (data && data.trans_result) {\n            resolve(data.trans_result);\n          } else {\n            reject(`\\n百度翻译api调用异常 error_code: ${data.error_code}, error_msg: ${data.error_msg}`);\n          }\n        })\n        .catch(err => {\n          reject(err);\n        });\n    }),\n    3000\n  );\n}\n\n/** 文案首字母大小 变量小写 */\nfunction textToUpperCaseByFirstWord(text) {\n  // 翻译文案首字母大写，变量小写\n  return text\n    ? `${text.charAt(0).toUpperCase()}${text.slice(1)}`.replace(/(\\{.*?\\})/g, text => text.toLowerCase())\n    : '';\n}\n\n/**\n * 使用google翻译所有待翻译的文案\n * @param untranslatedTexts 待翻译文案\n * @param toLang 目标语种\n */\nasync function googleTranslateTexts(untranslatedTexts, toLang) {\n  const translateAllTexts = Object.keys(untranslatedTexts).map(key => {\n    return translateText(untranslatedTexts[key], toLang).then(translatedText => [key, translatedText]);\n  });\n  return new Promise(resolve => {\n    const result = {};\n    Promise.all(translateAllTexts).then(res => {\n      res.forEach(([key, translatedText]) => {\n        result[key] = translatedText;\n      });\n      resolve(result);\n    });\n  });\n}\n\n/**\n * 使用百度翻译所有待翻译的文案\n * @param untranslatedTexts 待翻译文案\n * @param toLang 目标语种\n */\nasync function baiduTranslateTexts(untranslatedTexts, toLang) {\n  return new Promise(async resolve => {\n    const result = {};\n    const untranslatedKeys = Object.keys(untranslatedTexts);\n    const taskLists = {};\n    let lastIndex = 0;\n    // 由于百度api单词翻译字符长度限制，需要将待翻译的文案拆分成单个子任务\n    untranslatedKeys.reduce((pre, next, index) => {\n      const byteLen = Buffer.byteLength(pre, 'utf8');\n      if (byteLen > 5500) {\n        // 获取翻译字节数，大于5500放到单独任务里面处理\n        taskLists[lastIndex] = () => {\n          return new Promise(resolve => {\n            setTimeout(() => {\n              resolve(translateTextByBaidu(pre, toLang));\n            }, 1500);\n          });\n        };\n        lastIndex = index;\n        return untranslatedTexts[next];\n      } else if (index === untranslatedKeys.length - 1) {\n        taskLists[lastIndex] = () => {\n          return new Promise(resolve => {\n            setTimeout(() => {\n              resolve(translateTextByBaidu(`${pre}\\n${untranslatedTexts[next]}`, toLang));\n            }, 1500);\n          });\n        };\n      }\n      return `${pre}\\n${untranslatedTexts[next]}`;\n    }, '');\n\n    // 由于百度api调用QPS只有1, 考虑网络延迟 每1.5s请求一个子任务\n    const taskKeys = Object.keys(taskLists);\n    if (taskKeys.length > 0) {\n      for (var i = 0; i < taskKeys.length; i++) {\n        const langIndexKey = taskKeys[i];\n        const taskItemFun = taskLists[langIndexKey];\n        const data = await taskItemFun();\n        (data || []).forEach(({ dst }, index) => {\n          const currTextKey = untranslatedKeys[Number(langIndexKey) + index];\n          result[currTextKey] = textToUpperCaseByFirstWord(dst);\n        });\n      }\n    }\n\n    resolve(result);\n  });\n}\n\n/**\n * 执行翻译任务，自动导入翻译结果\n * @param dstLang\n */\nasync function runTranslateApi(dstLang: string, origin: string) {\n  const untranslatedTexts = getAllUntranslatedTexts(dstLang);\n  let mocks = {};\n  if (origin === 'Google') {\n    mocks = await googleTranslateTexts(untranslatedTexts, dstLang);\n  } else {\n    mocks = await baiduTranslateTexts(untranslatedTexts, dstLang);\n  }\n\n  const messagesToTranslate = Object.keys(mocks).map(key => [key, mocks[key]]);\n  if (messagesToTranslate.length === 0) {\n    return Promise.resolve();\n  }\n  const content = tsvFormatRows(messagesToTranslate);\n  // 输出tsv文件\n  return new Promise((resolve, reject) => {\n    const filePath = path.resolve(getLangDir(dstLang), `${dstLang}_translate.tsv`);\n    fs.writeFile(filePath, content, err => {\n      if (err) {\n        reject(err);\n      } else {\n        console.log(`${dstLang} 自动翻译完成`);\n        // 自动导入翻译结果\n        importMessages(filePath, dstLang);\n        resolve();\n      }\n    });\n  });\n}\n\n/**\n * 全量翻译\n * @param origin 翻译源\n */\nasync function translate(origin: string) {\n  const langs = CONFIG.distLangs;\n  if (origin === 'Google') {\n    const mockPromise = langs.map(lang => {\n      return runTranslateApi(lang, origin);\n    });\n    return Promise.all(mockPromise);\n  } else {\n    for (var i = 0; i < langs.length; i++) {\n      await runTranslateApi(langs[i], origin);\n    }\n    return Promise.resolve();\n  }\n}\n\nexport { translate, baiduTranslateTexts, googleTranslateTexts };\n","/**\n * @author doubledream\n * @desc 提取指定文件夹下的中文\n */\n\nimport * as _ from 'lodash';\nimport * as slash from 'slash2';\nimport * as path from 'path';\nimport * as colors from 'colors';\n\nimport { getSpecifiedFiles, readFile, writeFile, isFile, isDirectory } from './file';\nimport { findChineseText } from './findChineseText';\nimport { getSuggestLangObj } from './getLangData';\nimport {\n  translateText,\n  findMatchKey,\n  findMatchValue,\n  translateKeyText,\n  successInfo,\n  failInfo,\n  highlightText\n} from '../utils';\nimport { replaceAndUpdate, hasImportI18N, createImportI18N } from './replace';\nimport { getProjectConfig } from '../utils';\n\nconst CONFIG = getProjectConfig();\n\n/**\n * 剔除 kiwiDir 下的文件\n */\nfunction removeLangsFiles(files: string[]) {\n  const langsDir = path.resolve(process.cwd(), CONFIG.kiwiDir);\n  return files.filter(file => {\n    const completeFile = path.resolve(process.cwd(), file);\n    return !completeFile.includes(langsDir);\n  });\n}\n\n/**\n * 递归匹配项目中所有的代码的中文\n */\nfunction findAllChineseText(dir: string) {\n  const first = dir.split(',')[0];\n  let files = [];\n  if (isDirectory(first)) {\n    const dirPath = path.resolve(process.cwd(), dir);\n    files = getSpecifiedFiles(dirPath, CONFIG.ignoreDir, CONFIG.ignoreFile);\n  } else {\n    files = removeLangsFiles(dir.split(','));\n  }\n  const filterFiles = files.filter(file => {\n    return (isFile(file) && file.endsWith('.ts')) || file.endsWith('.tsx') || file.endsWith('.vue');\n  });\n  const allTexts = filterFiles.reduce((pre, file) => {\n    const code = readFile(file);\n    const texts = findChineseText(code, file);\n    // 调整文案顺序，保证从后面的文案往前替换，避免位置更新导致替换出错\n    const sortTexts = _.sortBy(texts, obj => -obj.range.start);\n    if (texts.length > 0) {\n      console.log(`${highlightText(file)} 发现 ${highlightText(texts.length)} 处中文文案`);\n    }\n\n    return texts.length > 0 ? pre.concat({ file, texts: sortTexts }) : pre;\n  }, []);\n\n  return allTexts;\n}\n\n/**\n * 处理作为key值的翻译原文\n */\nfunction getTransOriginText(text: string) {\n  // 避免翻译的字符里包含数字或者特殊字符等情况，只过滤出汉字和字母\n  const reg = /[a-zA-Z\\u4e00-\\u9fa5]+/g;\n  const findText = text.match(reg) || [];\n  const transOriginText = findText ? findText.join('').slice(0, 5) : '中文符号';\n\n  return transOriginText;\n}\n\n/**\n * @param currentFilename 文件路径\n * @returns string[]\n */\nfunction getSuggestion(currentFilename: string) {\n  let suggestion = [];\n  const suggestPageRegex = /\\/pages\\/\\w+\\/([^\\/]+)\\/([^\\/\\.]+)/;\n\n  if (currentFilename.includes('/pages/')) {\n    suggestion = currentFilename.match(suggestPageRegex);\n  }\n  if (suggestion) {\n    suggestion.shift();\n  }\n  /** 如果没有匹配到 Key */\n  if (!(suggestion && suggestion.length)) {\n    const names = slash(currentFilename).split('/');\n    const fileName = _.last(names) as any;\n    const fileKey = fileName.split('.')[0].replace(new RegExp('-', 'g'), '_');\n    const dir = names[names.length - 2].replace(new RegExp('-', 'g'), '_');\n    if (dir === fileKey) {\n      suggestion = [dir];\n    } else {\n      suggestion = [dir, fileKey];\n    }\n  }\n\n  return suggestion;\n}\n\n/**\n * 统一处理key值，已提取过的文案直接替换，翻译后的key若相同，加上出现次数\n * @param currentFilename 文件路径\n * @param langsPrefix 替换后的前缀\n * @param translateTexts 翻译后的key值\n * @param targetStrs 当前文件提取后的文案\n * @returns any[] 最终可用于替换的key值和文案\n */\nfunction getReplaceableStrs(currentFilename: string, langsPrefix: string, translateTexts: string[], targetStrs: any[]) {\n  const finalLangObj = getSuggestLangObj();\n  const virtualMemory = {};\n  const suggestion = getSuggestion(currentFilename);\n  const replaceableStrs = targetStrs.reduce((prev, curr, i) => {\n    const _text = curr.text;\n    let key = findMatchKey(finalLangObj, _text);\n    if (key) {\n      key = key.replace(/-/g, '_');\n    }\n    if (!virtualMemory[_text]) {\n      if (key) {\n        virtualMemory[_text] = key;\n        return prev.concat({\n          target: curr,\n          key,\n          needWrite: false\n        });\n      }\n      const transText = translateTexts[i] && _.camelCase(translateTexts[i] as string);\n      let transKey = `${suggestion.length ? suggestion.join('.') + '.' : ''}${transText}`;\n      transKey = transKey.replace(/-/g, '_');\n      if (langsPrefix) {\n        transKey = `${langsPrefix}.${transText}`;\n      }\n      let occurTime = 1;\n      // 防止出现前四位相同但是整体文案不同的情况\n      while (\n        findMatchValue(finalLangObj, transKey) !== _text &&\n        _.keys(finalLangObj).includes(`${transKey}${occurTime >= 2 ? occurTime : ''}`)\n      ) {\n        occurTime++;\n      }\n      if (occurTime >= 2) {\n        transKey = `${transKey}${occurTime}`;\n      }\n      virtualMemory[_text] = transKey;\n      finalLangObj[transKey] = _text;\n      return prev.concat({\n        target: curr,\n        key: transKey,\n        needWrite: true\n      });\n    } else {\n      return prev.concat({\n        target: curr,\n        key: virtualMemory[_text],\n        needWrite: true\n      });\n    }\n  }, []);\n\n  return replaceableStrs;\n}\n\n/**\n * 递归匹配项目中所有的代码的中文\n * @param {dirPath} 文件夹路径\n */\nfunction extractAll({ dirPath, prefix }: { dirPath?: string; prefix?: string }) {\n  const dir = dirPath || './';\n  // 去除I18N\n  const langsPrefix = prefix ? prefix.replace(/^I18N\\./, '') : null;\n  // 翻译源配置错误，则终止\n  const origin = CONFIG.defaultTranslateKeyApi || 'Pinyin';\n  if (!['Pinyin', 'Google', 'Baidu'].includes(CONFIG.defaultTranslateKeyApi)) {\n    console.log(\n      `Kiwi 仅支持 ${highlightText('Pinyin、Google、Baidu')}，请修改 ${highlightText('defaultTranslateKeyApi')} 配置项`\n    );\n    return;\n  }\n\n  const allTargetStrs = findAllChineseText(dir);\n  if (allTargetStrs.length === 0) {\n    console.log(highlightText('没有发现可替换的文案！'));\n    return;\n  }\n\n  // 提示翻译源\n  if (CONFIG.defaultTranslateKeyApi === 'Pinyin') {\n    console.log(\n      `当前使用 ${highlightText('Pinyin')} 作为key值的翻译源，若想得到更好的体验，可配置 ${highlightText(\n        'googleApiKey'\n      )} 或 ${highlightText('baiduApiKey')}，并切换 ${highlightText('defaultTranslateKeyApi')}`\n    );\n  } else {\n    console.log(`当前使用 ${highlightText(CONFIG.defaultTranslateKeyApi)} 作为key值的翻译源`);\n  }\n\n  console.log('即将截取每个中文文案的前5位翻译生成key值，并替换中...');\n\n  // 对当前文件进行文案key生成和替换\n  const generateKeyAndReplace = async item => {\n    const currentFilename = item.file;\n    console.log(`${currentFilename} 替换中...`);\n    // 过滤掉模板字符串内的中文，避免替换时出现异常\n    const targetStrs = item.texts.reduce((pre, strObj, i) => {\n      // 因为文案已经根据位置倒排，所以比较时只需要比较剩下的文案即可\n      const afterStrs = item.texts.slice(i + 1);\n      if (afterStrs.some(obj => strObj.range.end <= obj.range.end)) {\n        return pre;\n      }\n      return pre.concat(strObj);\n    }, []);\n    const len = item.texts.length - targetStrs.length;\n    if (len > 0) {\n      console.log(colors.red(`存在 ${highlightText(len)} 处文案无法替换，请避免在模板字符串的变量中嵌套中文`));\n    }\n\n    let translateTexts;\n\n    if (origin !== 'Google') {\n      // 翻译中文文案，百度和pinyin将文案进行拼接统一翻译\n      const delimiter = origin === 'Baidu' ? '\\n' : '$';\n      const translateOriginTexts = targetStrs.reduce((prev, curr, i) => {\n        const transOriginText = getTransOriginText(curr.text);\n        if (i === 0) {\n          return transOriginText;\n        }\n        return `${prev}${delimiter}${transOriginText}`;\n      }, []);\n\n      translateTexts = await translateKeyText(translateOriginTexts, origin);\n    } else {\n      // google并发性较好，且未找到有效的分隔符，故仍然逐个文案进行翻译\n      const translatePromises = targetStrs.reduce((prev, curr) => {\n        const transOriginText = getTransOriginText(curr.text);\n        return prev.concat(translateText(transOriginText, 'en_US'));\n      }, []);\n\n      [...translateTexts] = await Promise.all(translatePromises);\n    }\n\n    if (translateTexts.length === 0) {\n      failInfo(`未得到翻译结果，${currentFilename}替换失败！`);\n      return;\n    }\n\n    const replaceableStrs = getReplaceableStrs(currentFilename, langsPrefix, translateTexts, targetStrs);\n\n    await replaceableStrs\n      .reduce((prev, obj) => {\n        return prev.then(() => {\n          return replaceAndUpdate(currentFilename, obj.target, `I18N.${obj.key}`, false, obj.needWrite);\n        });\n      }, Promise.resolve())\n      .then(() => {\n        // 添加 import I18N\n        if (!hasImportI18N(currentFilename)) {\n          const code = createImportI18N(currentFilename);\n\n          writeFile(currentFilename, code);\n        }\n        successInfo(`${currentFilename} 替换完成，共替换 ${targetStrs.length} 处文案！`);\n      })\n      .catch(e => {\n        failInfo(e.message);\n      });\n  };\n\n  allTargetStrs\n    .reduce((prev, current) => {\n      return prev.then(() => {\n        return generateKeyAndReplace(current);\n      });\n    }, Promise.resolve())\n    .then(() => {\n      successInfo('全部替换完成！');\n    })\n    .catch((e: any) => {\n      failInfo(e.message);\n    });\n}\n\nexport { extractAll };\n","/**\n * @author doubledream\n * @desc 文件处理方法\n */\n\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\n\n/**\n * 获取文件夹下符合要求的所有文件\n * @function getSpecifiedFiles\n * @param  {string} dir 路径\n * @param {ignoreDirectory} 忽略文件夹 {ignoreFile} 忽略的文件\n */\nfunction getSpecifiedFiles(dir, ignoreDirectory = '', ignoreFile = '') {\n  return fs.readdirSync(dir).reduce((files, file) => {\n    const name = path.join(dir, file);\n    const isDirectory = fs.statSync(name).isDirectory();\n    const isFile = fs.statSync(name).isFile();\n\n    if (isDirectory) {\n      return files.concat(getSpecifiedFiles(name, ignoreDirectory, ignoreFile));\n    }\n\n    const isIgnoreDirectory =\n      !ignoreDirectory ||\n      (ignoreDirectory &&\n        !path\n          .dirname(name)\n          .split('/')\n          .includes(ignoreDirectory));\n    const isIgnoreFile = !ignoreFile || (ignoreFile && path.basename(name) !== ignoreFile);\n\n    if (isFile && isIgnoreDirectory && isIgnoreFile) {\n      return files.concat(name);\n    }\n    return files;\n  }, []);\n}\n\n/**\n * 读取文件\n * @param fileName\n */\nfunction readFile(fileName) {\n  if (fs.existsSync(fileName)) {\n    return fs.readFileSync(fileName, 'utf-8');\n  }\n}\n\n/**\n * 读取文件\n * @param fileName\n */\nfunction writeFile(filePath, file) {\n  if (fs.existsSync(filePath)) {\n    fs.writeFileSync(filePath, file);\n  }\n}\n\n/**\n * 判断是文件\n * @param path\n */\nfunction isFile(path) {\n  return fs.statSync(path).isFile();\n}\n\n/**\n * 判断是文件夹\n * @param path\n */\nfunction isDirectory(path) {\n  return fs.statSync(path).isDirectory();\n}\n\nexport { getSpecifiedFiles, readFile, writeFile, isFile, isDirectory };\n","/**\n * @author doubledream\n * @desc 利用 Ast 查找对应文件中的中文文案\n */\nimport * as ts from 'typescript';\nimport * as compiler from '@angular/compiler';\nimport * as compilerVue from 'vue-template-compiler';\nimport * as babel from '@babel/core';\n/** unicode cjk 中日韩文 范围 */\nconst DOUBLE_BYTE_REGEX = /[\\u4E00-\\u9FFF]/g;\n\nfunction transerI18n(code, filename, lang) {\n  if (lang === 'ts') {\n    return typescriptI18n(code, filename);\n  } else {\n    return javascriptI18n(code, filename);\n  }\n}\n\nfunction getScriptKind(fileName: string) {\n  return fileName.endsWith('.ts') ? ts.ScriptKind.TS : ts.ScriptKind.TSX;\n}\n\nfunction javascriptI18n(code, filename) {\n  let arr = [];\n  let visitor = {\n    StringLiteral(path) {\n      if (path.node.value.match(DOUBLE_BYTE_REGEX)) {\n        arr.push(path.node.value);\n      }\n    }\n  };\n  let arrayPlugin = { visitor };\n  babel.transformSync(code.toString(), {\n    filename,\n    plugins: [arrayPlugin]\n  });\n  return arr;\n}\nfunction typescriptI18n(code, fileName) {\n  let arr = [];\n  const scriptKind = getScriptKind(fileName);\n  const ast = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, scriptKind);\n  function visit(node: ts.Node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.StringLiteral: {\n        /** 判断 Ts 中的字符串含有中文 */\n        const { text } = node as ts.StringLiteral;\n        if (text.match(DOUBLE_BYTE_REGEX)) {\n          arr.push(text);\n        }\n        break;\n      }\n    }\n    ts.forEachChild(node, visit);\n  }\n  ts.forEachChild(ast, visit);\n  return arr;\n}\n/**\n * 去掉文件中的注释\n * @param code\n * @param fileName\n */\nfunction removeFileComment(code, fileName) {\n  const printer = ts.createPrinter({ removeComments: true });\n  const sourceFile = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, getScriptKind(fileName));\n  return printer.printFile(sourceFile);\n}\n\n/**\n * 查找 Ts 文件中的中文\n * @param code\n */\nfunction findTextInTs(code: string, fileName: string) {\n  const matches = [];\n  const ast = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, getScriptKind(fileName));\n\n  function visit(node: ts.Node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.StringLiteral: {\n        /** 判断 Ts 中的字符串含有中文 */\n        const { text } = node as ts.StringLiteral;\n        if (text.match(DOUBLE_BYTE_REGEX)) {\n          const start = node.getStart();\n          const end = node.getEnd();\n          const range = { start, end };\n          matches.push({\n            range,\n            text,\n            isString: true\n          });\n        }\n        break;\n      }\n      case ts.SyntaxKind.JsxElement: {\n        const { children } = node as ts.JsxElement;\n\n        children.forEach(child => {\n          if (child.kind === ts.SyntaxKind.JsxText) {\n            const text = child.getText();\n            /** 修复注释含有中文的情况，Angular 文件错误的 Ast 情况 */\n            const noCommentText = removeFileComment(text, fileName);\n\n            if (noCommentText.match(DOUBLE_BYTE_REGEX)) {\n              const start = child.getStart();\n              const end = child.getEnd();\n              const range = { start, end };\n\n              matches.push({\n                range,\n                text: text.trim(),\n                isString: false\n              });\n            }\n          }\n        });\n        break;\n      }\n      case ts.SyntaxKind.TemplateExpression: {\n        const { pos, end } = node;\n        const templateContent = code.slice(pos, end);\n\n        if (templateContent.match(DOUBLE_BYTE_REGEX)) {\n          const start = node.getStart();\n          const end = node.getEnd();\n          const range = { start, end };\n          matches.push({\n            range,\n            text: code.slice(start + 1, end - 1),\n            isString: true\n          });\n        }\n        break;\n      }\n      case ts.SyntaxKind.NoSubstitutionTemplateLiteral: {\n        const { pos, end } = node;\n        const templateContent = code.slice(pos, end);\n\n        if (templateContent.match(DOUBLE_BYTE_REGEX)) {\n          const start = node.getStart();\n          const end = node.getEnd();\n          const range = { start, end };\n          matches.push({\n            range,\n            text: code.slice(start + 1, end - 1),\n            isString: true\n          });\n        }\n      }\n    }\n\n    ts.forEachChild(node, visit);\n  }\n  ts.forEachChild(ast, visit);\n\n  return matches;\n}\n\n/**\n * 查找 HTML 文件中的中文\n * @param code\n */\nfunction findTextInHtml(code) {\n  const matches = [];\n  const ast = compiler.parseTemplate(code, 'ast.html', {\n    preserveWhitespaces: false\n  });\n\n  function visit(node) {\n    const value = node.value;\n    if (value && typeof value === 'string' && value.match(DOUBLE_BYTE_REGEX)) {\n      const valueSpan = node.valueSpan || node.sourceSpan;\n      let {\n        start: { offset: startOffset },\n        end: { offset: endOffset }\n      } = valueSpan;\n      const nodeValue = code.slice(startOffset, endOffset);\n      let isString = false;\n      /** 处理带引号的情况 */\n      if (nodeValue.charAt(0) === '\"' || nodeValue.charAt(0) === \"'\") {\n        isString = true;\n      }\n      const range = { start: startOffset, end: endOffset };\n      matches.push({\n        range,\n        text: value,\n        isString\n      });\n    } else if (value && typeof value === 'object' && value.source && value.source.match(DOUBLE_BYTE_REGEX)) {\n      /**\n       * <span>{{expression}}中文</span> 这种情况的兼容\n       */\n      const chineseMatches = value.source.match(DOUBLE_BYTE_REGEX);\n      chineseMatches.map(match => {\n        const valueSpan = node.valueSpan || node.sourceSpan;\n        let {\n          start: { offset: startOffset },\n          end: { offset: endOffset }\n        } = valueSpan;\n        const nodeValue = code.slice(startOffset, endOffset);\n        const start = nodeValue.indexOf(match);\n        const end = start + match.length;\n        const range = { start, end };\n        matches.push({\n          range,\n          text: match[0],\n          isString: false\n        });\n      });\n    }\n\n    if (node.children && node.children.length) {\n      node.children.forEach(visit);\n    }\n    if (node.attributes && node.attributes.length) {\n      node.attributes.forEach(visit);\n    }\n  }\n\n  if (ast.nodes && ast.nodes.length) {\n    ast.nodes.forEach(visit);\n  }\n  return matches;\n}\n/**\n * 递归匹配vue代码的中文\n * @param code\n */\nfunction findTextInVue(code: string) {\n  let rexspace1 = new RegExp(/&ensp;/, 'g');\n  let rexspace2 = new RegExp(/&emsp;/, 'g');\n  let rexspace3 = new RegExp(/&nbsp;/, 'g');\n  code = code\n    .replace(rexspace1, 'ccsp&;')\n    .replace(rexspace2, 'ecsp&;')\n    .replace(rexspace3, 'ncsp&;');\n  let coverRex1 = new RegExp(/ccsp&;/, 'g');\n  let coverRex2 = new RegExp(/ecsp&;/, 'g');\n  let coverRex3 = new RegExp(/ncsp&;/, 'g');\n  let matches = [];\n  var result;\n  const vueObejct = compilerVue.compile(code.toString(), { outputSourceRange: true });\n  let vueAst = vueObejct.ast;\n  let expressTemp = findVueText(vueAst);\n  expressTemp.forEach(item => {\n    item.arrf = [item.start, item.end];\n  });\n  matches = expressTemp;\n  let outcode = vueObejct.render.toString().replace('with(this)', 'function a()');\n  let vueTemp = transerI18n(outcode, 'as.vue', null);\n\n  /**删除所有的html中的头部空格 */\n  vueTemp = vueTemp.map(item => {\n    return item.trim();\n  });\n\n  vueTemp = Array.from(new Set(vueTemp));\n  let codeStaticArr = [];\n  vueObejct.staticRenderFns.forEach(item => {\n    let childcode = item.toString().replace('with(this)', 'function a()');\n    let vueTempChild = transerI18n(childcode, 'as.vue', null);\n    codeStaticArr = codeStaticArr.concat(Array.from(new Set(vueTempChild)));\n  });\n  vueTemp = Array.from(new Set(codeStaticArr.concat(vueTemp)));\n  vueTemp.forEach(item => {\n    let items = item\n      .replace(/\\{/g, '\\\\{')\n      .replace(/\\}/g, '\\\\}')\n      .replace(/\\$/g, '\\\\$')\n      .replace(/\\(/g, '\\\\(')\n      .replace(/\\)/g, '\\\\)')\n      .replace(/\\+/g, '\\\\+')\n      .replace(/\\*/g, '\\\\*')\n      .replace(/\\^/g, '\\\\^');\n    let rex = new RegExp(items, 'g');\n    let codeTemplate = code.substring((vueObejct.ast as any).start, (vueObejct.ast as any).end);\n    while ((result = rex.exec(codeTemplate))) {\n      let res = result;\n      let last = rex.lastIndex;\n      last = last - (res[0].length - res[0].trimRight().length);\n      const range = { start: res.index, end: last };\n      matches.push({\n        arrf: [res.index, last],\n        range,\n        text: res[0]\n          .trimRight()\n          .replace(coverRex1, '&ensp;')\n          .replace(coverRex2, '&emsp;')\n          .replace(coverRex3, '&nbsp;'),\n        isString:\n          (codeTemplate.substr(res.index - 1, 1) === '\"' && codeTemplate.substr(last, 1) === '\"') ||\n          (codeTemplate.substr(res.index - 1, 1) === \"'\" && codeTemplate.substr(last, 1) === \"'\")\n            ? true\n            : false\n      });\n    }\n  });\n  let matchesTemp = matches;\n  let matchesTempResult = matchesTemp.filter((item, index) => {\n    let canBe = true;\n    matchesTemp.forEach(items => {\n      if (\n        (item.arrf[0] > items.arrf[0] && item.arrf[1] <= items.arrf[1]) ||\n        (item.arrf[0] >= items.arrf[0] && item.arrf[1] < items.arrf[1]) ||\n        (item.arrf[0] > items.arrf[0] && item.arrf[1] < items.arrf[1])\n      ) {\n        canBe = false;\n      }\n    });\n    if (canBe) return item;\n  });\n  const sfc = compilerVue.parseComponent(code.toString());\n  return matchesTempResult.concat(findTextInVueTs(sfc.script.content, 'AS', sfc.script.start));\n}\nfunction findTextInVueTs(code: string, fileName: string, startNum: number) {\n  const matches = [];\n  const ast = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, ts.ScriptKind.TS);\n\n  function visit(node: ts.Node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.StringLiteral: {\n        /** 判断 Ts 中的字符串含有中文 */\n        const { text } = node as ts.StringLiteral;\n        if (text.match(DOUBLE_BYTE_REGEX)) {\n          const start = node.getStart();\n          const end = node.getEnd();\n          /** 加一，减一的原因是，去除引号 */\n          const range = { start: start + startNum, end: end + startNum };\n          matches.push({\n            range,\n            text,\n            isString: true\n          });\n        }\n        break;\n      }\n      case ts.SyntaxKind.TemplateExpression: {\n        const { pos, end } = node;\n        let templateContent = code.slice(pos, end);\n        templateContent = templateContent.toString().replace(/\\$\\{[^\\}]+\\}/, '');\n        if (templateContent.match(DOUBLE_BYTE_REGEX)) {\n          const start = node.getStart();\n          const end = node.getEnd();\n          /** 加一，减一的原因是，去除`号 */\n          const range = { start: start + startNum, end: end + startNum };\n          matches.push({\n            range,\n            text: code.slice(start + 1, end - 1),\n            isString: true\n          });\n        }\n        break;\n      }\n    }\n\n    ts.forEachChild(node, visit);\n  }\n  ts.forEachChild(ast, visit);\n\n  return matches;\n}\nfunction findVueText(ast) {\n  let arr = [];\n  const regex1 = /\\`(.+?)\\`/g;\n  function emun(ast) {\n    if (ast.expression) {\n      let text = ast.expression.match(regex1);\n      if (text && text[0].match(DOUBLE_BYTE_REGEX)) {\n        text.forEach(itemText => {\n          const varInStr = itemText.match(/(\\$\\{[^\\}]+?\\})/g);\n          if (varInStr)\n            itemText.match(DOUBLE_BYTE_REGEX) &&\n              arr.push({ text: ' ' + itemText, range: { start: ast.start + 2, end: ast.end - 2 }, isString: true });\n          else\n            itemText.match(DOUBLE_BYTE_REGEX) &&\n              arr.push({ text: itemText, range: { start: ast.start, end: ast.end }, isString: false });\n        });\n      } else {\n        ast.tokens &&\n          ast.tokens.forEach(element => {\n            if (typeof element === 'string' && element.match(DOUBLE_BYTE_REGEX)) {\n              arr.push({\n                text: element,\n                range: {\n                  start: ast.start + ast.text.indexOf(element),\n                  end: ast.start + ast.text.indexOf(element) + element.length\n                },\n                isString: false\n              });\n            }\n          });\n      }\n    } else if (!ast.expression && ast.text) {\n      ast.text.match(DOUBLE_BYTE_REGEX) &&\n        arr.push({ text: ast.text, range: { start: ast.start, end: ast.end }, isString: false });\n    } else {\n      ast.children &&\n        ast.children.forEach(item => {\n          emun(item);\n        });\n    }\n  }\n  emun(ast);\n  return arr;\n}\n/**\n * 递归匹配代码的中文\n * @param code\n */\nfunction findChineseText(code: string, fileName: string) {\n  if (fileName.endsWith('.html')) {\n    return findTextInHtml(code);\n  } else if (fileName.endsWith('.vue')) {\n    return findTextInVue(code);\n  } else {\n    return findTextInTs(code, fileName);\n  }\n}\n\nexport { findChineseText, findTextInVue };\n","/**\n * @author doubledream\n * @desc 更新文件\n */\n\nimport * as fs from 'fs-extra';\nimport * as _ from 'lodash';\n// const prettier = require('prettier');\nimport * as ts from 'typescript';\nimport { readFile, writeFile } from './file';\nimport { getLangData } from './getLangData';\nimport { getProjectConfig, getLangDir, successInfo, failInfo, highlightText } from '../utils';\n\nconst CONFIG = getProjectConfig();\nconst srcLangDir = getLangDir(CONFIG.srcLang);\n\nfunction updateLangFiles(keyValue, text, validateDuplicate) {\n  if (!_.startsWith(keyValue, 'I18N.')) {\n    return;\n  }\n\n  const [, filename, ...restPath] = keyValue.split('.');\n  const fullKey = restPath.join('.');\n  const targetFilename = `${srcLangDir}/${filename}.ts`;\n\n  if (!fs.existsSync(targetFilename)) {\n    fs.writeFileSync(targetFilename, generateNewLangFile(fullKey, text));\n    addImportToMainLangFile(filename);\n    successInfo(`成功新建语言文件 ${targetFilename}`);\n  } else {\n    // 清除 require 缓存，解决手动更新语言文件后再自动抽取，导致之前更新失效的问题\n    const mainContent = getLangData(targetFilename);\n    const obj = mainContent;\n\n    if (Object.keys(obj).length === 0) {\n      failInfo(`${filename} 解析失败，该文件包含的文案无法自动补全`);\n    }\n\n    if (validateDuplicate && _.get(obj, fullKey) !== undefined) {\n      failInfo(`${targetFilename} 中已存在 key 为 \\`${fullKey}\\` 的翻译，请重新命名变量`);\n      throw new Error('duplicate');\n    }\n    // \\n 会被自动转义成 \\\\n，这里转回来\n    text = text.replace(/\\\\n/gm, '\\n');\n    _.set(obj, fullKey, text);\n    fs.writeFileSync(targetFilename, prettierFile(`export default ${JSON.stringify(obj, null, 2)}`));\n  }\n}\n\n/**\n * 使用 Prettier 格式化文件\n * @param fileContent\n */\nfunction prettierFile(fileContent) {\n  // try {\n  //   return prettier.format(fileContent, {\n  //     parser: 'typescript',\n  //     trailingComma: 'all',\n  //     singleQuote: true\n  //   });\n  // } catch (e) {\n  //   failInfo(`代码格式化报错！${e.toString()}\\n代码为：${fileContent}`);\n  return fileContent;\n  // }\n}\n\nfunction generateNewLangFile(key, value) {\n  const obj = _.set({}, key, value);\n\n  return prettierFile(`export default ${JSON.stringify(obj, null, 2)}`);\n}\n\nfunction addImportToMainLangFile(newFilename) {\n  let mainContent = '';\n  if (fs.existsSync(`${srcLangDir}/index.ts`)) {\n    mainContent = fs.readFileSync(`${srcLangDir}/index.ts`, 'utf8');\n    mainContent = mainContent.replace(/^(\\s*import.*?;)$/m, `$1\\nimport ${newFilename} from './${newFilename}';`);\n    if (/(}\\);)/.test(mainContent)) {\n      if (/\\,\\n(}\\);)/.test(mainContent)) {\n        /** 最后一行包含,号 */\n        mainContent = mainContent.replace(/(}\\);)/, `  ${newFilename},\\n$1`);\n      } else {\n        /** 最后一行不包含,号 */\n        mainContent = mainContent.replace(/\\n(}\\);)/, `,\\n  ${newFilename},\\n$1`);\n      }\n    }\n    // 兼容 export default { common };的写法\n    if (/(};)/.test(mainContent)) {\n      if (/\\,\\n(};)/.test(mainContent)) {\n        /** 最后一行包含,号 */\n        mainContent = mainContent.replace(/(};)/, `  ${newFilename},\\n$1`);\n      } else {\n        /** 最后一行不包含,号 */\n        mainContent = mainContent.replace(/\\n(};)/, `,\\n  ${newFilename},\\n$1`);\n      }\n    }\n  } else {\n    mainContent = `import ${newFilename} from './${newFilename}';\\n\\nexport default Object.assign({}, {\\n  ${newFilename},\\n});`;\n  }\n\n  fs.writeFileSync(`${srcLangDir}/index.ts`, mainContent);\n}\n\n/**\n * 检查是否添加 import I18N 命令\n * @param filePath 文件路径\n */\nfunction hasImportI18N(filePath) {\n  const code = readFile(filePath);\n  const ast = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, ts.ScriptKind.TSX);\n  let hasImportI18N = false;\n\n  function visit(node) {\n    if (node.kind === ts.SyntaxKind.ImportDeclaration) {\n      const importClause = node.importClause;\n\n      // import I18N from 'src/utils/I18N';\n      if (_.get(importClause, 'kind') === ts.SyntaxKind.ImportClause) {\n        if (importClause.name) {\n          if (importClause.name.escapedText === 'I18N') {\n            hasImportI18N = true;\n          }\n        } else {\n          const namedBindings = importClause.namedBindings;\n          // import { I18N } from 'src/utils/I18N';\n          if (namedBindings.kind === ts.SyntaxKind.NamedImports) {\n            namedBindings.elements.forEach(element => {\n              if (element.kind === ts.SyntaxKind.ImportSpecifier && _.get(element, 'name.escapedText') === 'I18N') {\n                hasImportI18N = true;\n              }\n            });\n          }\n          // import * as I18N from 'src/utils/I18N';\n          if (namedBindings.kind === ts.SyntaxKind.NamespaceImport) {\n            if (_.get(namedBindings, 'name.escapedText') === 'I18N') {\n              hasImportI18N = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ts.forEachChild(ast, visit);\n\n  return hasImportI18N;\n}\n\n/**\n * 在合适的位置添加 import I18N 语句\n * @param filePath 文件路径\n */\nfunction createImportI18N(filePath) {\n  const code = readFile(filePath);\n  const ast = ts.createSourceFile('', code, ts.ScriptTarget.ES2015, true, ts.ScriptKind.TSX);\n  const isTsFile = _.endsWith(filePath, '.ts');\n  const isTsxFile = _.endsWith(filePath, '.tsx');\n  const isVueFile = _.endsWith(filePath, '.vue');\n  if (isTsFile || isTsxFile) {\n    const importStatement = `${CONFIG.importI18N}\\n`;\n    const pos = ast.getStart(ast, false);\n    const updateCode = code.slice(0, pos) + importStatement + code.slice(pos);\n\n    return updateCode;\n  } else if (isVueFile) {\n    const importStatement = `${CONFIG.importI18N}\\n`;\n    const updateCode = code.replace(/<script>/g, `<script>\\n${importStatement}`);\n    return updateCode;\n  }\n}\n\n/**\n * 更新文件\n * @param filePath 当前文件路径\n * @param arg  目标字符串对象\n * @param val  目标 key\n * @param validateDuplicate 是否校验文件中已经存在要写入的 key\n * @param needWrite 是否只需要替换不需要更新 langs 文件\n */\nfunction replaceAndUpdate(filePath, arg, val, validateDuplicate, needWrite = true) {\n  const code = readFile(filePath);\n  const isHtmlFile = _.endsWith(filePath, '.html');\n  const isVueFile = _.endsWith(filePath, '.vue');\n  let newCode = code;\n  let finalReplaceText = arg.text;\n  const { start, end } = arg.range;\n  // 若是字符串，删掉两侧的引号\n  if (arg.isString) {\n    // 如果引号左侧是 等号，则可能是 jsx 的 props，此时要替换成 {\n    const preTextStart = start - 1;\n    const [last2Char, last1Char] = code.slice(preTextStart, start + 1).split('');\n    let finalReplaceVal = val;\n    if (last2Char === '=') {\n      if (isHtmlFile) {\n        finalReplaceVal = '{{' + val + '}}';\n      } else if (isVueFile) {\n        finalReplaceVal = '{{' + val + '}}';\n      } else {\n        finalReplaceVal = '{' + val + '}';\n      }\n    }\n    // 若是模板字符串，看看其中是否包含变量\n    if (last1Char === '`') {\n      const varInStr = arg.text.match(/(\\$\\{[^\\}]+?\\})/g);\n      if (varInStr) {\n        const kvPair = varInStr.map((str, index) => {\n          return `val${index + 1}: ${str.replace(/^\\${([^\\}]+)\\}$/, '$1')}`;\n        });\n        finalReplaceVal = `I18N.template(${val}, { ${kvPair.join(',\\n')} })`;\n\n        varInStr.forEach((str, index) => {\n          finalReplaceText = finalReplaceText.replace(str, `{val${index + 1}}`);\n        });\n      }\n    }\n\n    newCode = `${code.slice(0, start)}${finalReplaceVal}${code.slice(end)}`;\n  } else {\n    if (isHtmlFile || isVueFile) {\n      newCode = `${code.slice(0, start)}{{${val}}}${code.slice(end)}`;\n    } else {\n      newCode = `${code.slice(0, start)}{${val}}${code.slice(end)}`;\n    }\n  }\n\n  try {\n    if (needWrite) {\n      // 更新语言文件\n      updateLangFiles(val, finalReplaceText, validateDuplicate);\n    }\n    // 若更新成功再替换代码\n    return writeFile(filePath, newCode);\n  } catch (e) {\n    return Promise.reject(e.message);\n  }\n}\n\nexport { replaceAndUpdate, hasImportI18N, createImportI18N };\n"],"names":[],"version":3,"file":"index.js.map"}